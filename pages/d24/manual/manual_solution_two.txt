inp w
w = d0

mul x 0
add x z
mod x 26
x = z % 26

{w: d0, x: 0, y: 0, z: 0}

div z 1
z = z

{w: d0, x: 0, y: 0, z: 0}

add x 13
x = x + 13

{w: d0, x: 13, y: 0, z: 0}

eql x w
eql x 0
x = 1 if x !== w

{w: d0, x: 1, y: 0, z: 0}

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

{w: d0, x: 1, y: 0, z: 0}

mul y 0
add y w
add y 13
mul y x
add z y
z = z + ((w + 13) * x)

{w: d0, x: 1, y: 0, z: d0 + 13}

inp w
w = d1

{w: d1, x: 1, y: 0, z: d0 + 13}

mul x 0
add x z
mod x 26
x = z % 26

{w: d1, x: (d0 + 13) % 26, y: 0, z: d0 + 13}

div z 1
z = z

add x 11
x = x + 11

{w: d1, x: ((d0 + 13) % 26) + 11, y: 0, z: d0 + 13}

eql x w
eql x 0
x = 1 if x !== w

{w: d1, x: 1, y: 0, z: d0 + 13}

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

{w: d1, x: 1, y: 0, z: (d0 + 13) * 26}

mul y 0
add y w
add y 10
mul y x
add z y
z = z + ((w + 10) * x)

{w: d1, x: 1, y: 0, z: ((d0 + 13) * 26) + (d1 + 10)}

inp w
w = d2

{
    w: d2,
    x: 1,
    y: 0,
    z: ((d0 + 13) * 26) + (d1 + 10)
}

mul x 0
add x z
mod x 26
x = z % 26

{
    w: d2,
    x: (((d0 + 13) * 26) + (d1 + 10)) % 26,
    y: 0,
    z: ((d0 + 13) * 26) + (d1 + 10)
}

div z 1
z = z

add x 15
x = z + 15

{
    w: d2,
    x: z + 15,
    y: 0,
    z: ((d0 + 13) * 26) + (d1 + 10)
}

eql x w
eql x 0
x = 1 if x !== w

{
    w: d2,
    x: 1,
    y: 0,
    z: ((d0 + 13) * 26) + (d1 + 10)
}

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

{
    w: d2,
    x: 1,
    y: 0,
    z: (((d0 + 13) * 26) + (d1 + 10)) * 26
}

mul y 0
add y w
add y 5
mul y x
add z y
z = z + ((w + 5) * x)

{
    w: d2,
    x: 1,
    y: 0,
    z: ((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)
}

inp w
w = d3

{
    w: d3,
    x: 1,
    y: 0,
    z: ((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)
}

mul x 0
add x z
mod x 26
x = z % 26

{
    w: d3,
    x: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) % 26,
    y: 0,
    z: ((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)
}

div z 26
z = z / 26

{
    w: d3,
    x: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) % 26,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

add x -11
x = x - 11

{
    w: d3,
    x: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) % 26) - 11,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

eql x w
eql x 0
x = 1 if x !== w

s1 = ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) % 26) - 11

s1 !== d3 {
    w: d3,
    x: 1,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

s1 === d3 {
    w: d3,
    x: 0,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

s1 !== d3 {
    w: d3,
    x: 1,
    y: 0,
    z: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26
}

s1 === d3 {
    w: d3,
    x: 0,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

mul y 0
add y w
add y 14
mul y x
add z y
z = z + ((w + 14) * x)

s1 !== d3 {
    w: d3,
    x: 1,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)
}

s1 === d3 {
    w: d3,
    x: 0,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

inp w
w = d4

s1 !== d3 {
    w: d4,
    x: 1,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)
}

s1 === d3 {
    w: d4,
    x: 0,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

mul x 0
add x z
mod x 26
x = z % 26

s1 !== d3 {
    w: d4,
    x: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) % 26,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)
}

s1 === d3 {
    w: d4,
    x: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) % 26,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

div z 1
z = z

add x 14
x = x + 14

s1 !== d3 {
    w: d4,
    x: (((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) % 26) + 14,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)
}

s1 === d3 {
    w: d4,
    x: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) % 26) + 14,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

eql x w
eql x 0
x = 1 if x !== w

s2 = (((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) % 26) + 14

s3 = (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) % 26) + 14

s1 !== d3 && s2 !== d4 {
    w: d4,
    x: 1,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)
}

s1 !== d3 && s2 === d4 {
    w: d4,
    x: 0,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)
}

s1 === d3 && s3 !== d4 {
    w: d4,
    x: 1,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

s1 === d3 && s3 === d4 {
    w: d4,
    x: 0,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

s1 !== d3 && s2 !== d4 {
    w: d4,
    x: 1,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26
}

s1 !== d3 && s2 === d4 {
    w: d4,
    x: 0,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)
}

s1 === d3 && s3 !== d4 {
    w: d4,
    x: 1,
    y: 0,
    z: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26
}

s1 === d3 && s3 === d4 {
    w: d4,
    x: 0,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

mul y 0
add y w
add y 5
mul y x
add z y
z = z + ((w + 5) * x)

s1 !== d3 && s2 !== d4 {
    w: d4,
    x: 1,
    y: 0,
    z: (((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)
}

s1 !== d3 && s2 === d4 {
    w: d4,
    x: 0,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)
}

s1 === d3 && s3 !== d4 {
    w: d4,
    x: 1,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)
}

s1 === d3 && s3 === d4 {
    w: d4,
    x: 0,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

inp w
w = d5

s1 !== d3 && s2 !== d4 {
    w: d5,
    x: 1,
    y: 0,
    z: (((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)
}

s1 !== d3 && s2 === d4 {
    w: d5,
    x: 0,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)
}

s1 === d3 && s3 !== d4 {
    w: d5,
    x: 1,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)
}

s1 === d3 && s3 === d4 {
    w: d5,
    x: 0,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

mul x 0
add x z
mod x 26
x = z % 26

s1 !== d3 && s2 !== d4 {
    w: d5,
    x: ((((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)) % 26,
    y: 0,
    z: (((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)
}

s1 !== d3 && s2 === d4 {
    w: d5,
    x: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) % 26,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)
}

s1 === d3 && s3 !== d4 {
    w: d5,
    x: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)) % 26,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)
}

s1 === d3 && s3 === d4 {
    w: d5,
    x: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) % 26,
    y: 0,
    z: (((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26
}

div z 26
z = z / 26

s1 !== d3 && s2 !== d4 {
    w: d5,
    x: ((((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)) % 26,
    y: 0,
    z: ((((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)) / 26
}

s1 !== d3 && s2 === d4 {
    w: d5,
    x: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) % 26,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) / 26
}

s1 === d3 && s3 !== d4 {
    w: d5,
    x: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)) % 26,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)) / 26
}

s1 === d3 && s3 === d4 {
    w: d5,
    x: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) % 26,
    y: 0,
    z: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) / 26
}

add x 0
x = x

eql x w
eql x 0
x = 1 if x !== w

s4 = ((((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)) % 26

s5 = ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) % 26

s6 = ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)) % 26

s7 = ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) % 26

s1 !== d3 && s2 !== d4 && s4 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: ((((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)) / 26
}

s1 !== d3 && s2 !== d4 && s4 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)) / 26
}

s1 !== d3 && s2 === d4 && s5 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) / 26
}

s1 !== d3 && s2 === d4 && s5 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) / 26
}

s1 === d3 && s3 !== d4 && s6 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)) / 26
}

s1 === d3 && s3 !== d4 && s6 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)) / 26
}

s1 === d3 && s3 === d4 && s7 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) / 26
}

s1 === d3 && s3 === d4 && s7 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) / 26
}

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

s1 !== d3 && s2 !== d4 && s4 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: (((((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)) / 26) * 26
}

s1 !== d3 && s2 !== d4 && s4 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)) / 26
}

s1 !== d3 && s2 === d4 && s5 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: (((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) / 26) * 26
}

s1 !== d3 && s2 === d4 && s5 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) / 26
}

s1 === d3 && s3 !== d4 && s6 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: (((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)) / 26) * 26
}

s1 === d3 && s3 !== d4 && s6 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)) / 26
}

s1 === d3 && s3 === d4 && s7 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) / 26) * 26
}

s1 === d3 && s3 === d4 && s7 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) / 26
}

mul y 0
add y w
add y 15
mul y x
add z y
z = z + ((w + 15) * x)

s1 !== d3 && s2 !== d4 && s4 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: (((((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)) / 26) * 26
}

s1 !== d3 && s2 !== d4 && s4 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) + 26) + (d4 + 5)) / 26
}

s1 !== d3 && s2 === d4 && s5 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: (((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) / 26) * 26
}

s1 !== d3 && s2 === d4 && s5 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) * 26) + (d3 + 14)) / 26
}

s1 === d3 && s3 !== d4 && s6 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: (((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)) / 26) * 26
}

s1 === d3 && s3 !== d4 && s6 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) + 26) + (d4 + 5)) / 26
}

s1 === d3 && s3 === d4 && s7 !== d5 {
    w: d5,
    x: 1,
    y: 0,
    z: (((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) / 26) * 26
}

s1 === d3 && s3 === d4 && s7 === d5 {
    w: d5,
    x: 0,
    y: 0,
    z: ((((((d0 + 13) * 26) + (d1 + 10)) * 26) + (d2 + 5)) / 26) / 26
}

inp w
w = d6

mul x 0
add x z
mod x 26
x = z % 26

div z 1
z = z

add x 12
x = x + 12

eql x w
eql x 0
x = 1 if x !== w

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

mul y 0
add y w
add y 4
mul y x
add z y
z = z + ((w + 4) * x)

inp w
w = d7

mul x 0
add x z
mod x 26
x = z % 26

div z 1
z = z

add x 12
x = x + 12

eql x w
eql x 0
x = 1 if x !== w

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

mul y 0
add y w
add y 11
mul y x
add z y
z = z + ((w + 11) * x)

inp w
w = d8

mul x 0
add x z
mod x 26
x = z % 26

div z 1
z = z

add x 14
x = x + 14

eql x w
eql x 0
x = 1 if x !== w

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

mul y 0
add y w
add y 1
mul y x
add z y
z = z + ((w + 1) * x)

inp w
w = d9

mul x 0
add x z
mod x 26
x = z % 26

div z 26
z = z / 26

add x -6
x = x - 6

eql x w
eql x 0
x = 1 if x !== w

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

mul y 0
add y w
add y 15
mul y x
add z y
z = z + ((w + 15) * x)

inp w
w = d10

mul x 0
add x z
mod x 26
x = z % 26

div z 26
z = z / 26

add x -10
x = x - 10

eql x w
eql x 0
x = 1 if x !== w

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

mul y 0
add y w
add y 12
mul y x
add z y
z = z + ((w + 12) * x)

inp w
w = d11

mul x 0
add x z
mod x 26
x = z % 26

div z 26
z = z / 26

add x -12
x = x - 12

eql x w
eql x 0
x = 1 if x !== w

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

mul y 0
add y w
add y 8
mul y x
add z y
z = (z + ((w + 8) * x))

inp w
w = d12

mul x 0
add x z
mod x 26
x = z % 26

div z 26
z = z / 26

add x -3
x = x - 3

eql x w
eql x 0
x = 1 if x !== w

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

mul y 0
add y w
add y 14
mul y x
add z y
z = z + ((w + 14) * x)

inp w
w = d13 (last digit)

mul x 0
add x z
mod x 26
x = z % 26

div z 26
z = z / 26

add x -5
x = x - 5

eql x w
eql x 0
x = 1 if x !== w

mul y 0
add y 25
mul y x
add y 1
mul z y
z = z * ((25 * x) + 1)

mul y 0
add y w
add y 9
mul y x
add z y
Answer = z + ((w + 9) * x)






// end
