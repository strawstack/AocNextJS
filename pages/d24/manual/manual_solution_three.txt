0 = (((((((d3 + 11) + ((((d5 + ((((((((d9 + 6) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26) - (d8 + 1)) / 26) - (d7 + 11)) / 26) - (d6 + 4)) / 26) * 26)) - (d4 + 5)) / 26) * 26)) - (d2 + 5)) / 26) - (d1 + 10)) / 26) - (d0 + 13)) / 26

---

[
    alt z: (((((((d3 + 11) + (z * 26)) - (d2 + 5)) / 26) - (d1 + 10)) / 26) - (d0 + 13)) / 26
]

[
    z = (((((((d3 + 11) + ((((d5 + ((((((((d9 + 6) - (d8 + 1) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26)) / 26) - (d7 + 11)) / 26) - (d6 + 4)) / 26) * 26)) - (d4 + 5)) / 26) * 26)) - (d2 + 5)) / 26) - (d1 + 10)) / 26) - (d0 + 13)) / 26
]

w = d0

z = z * 26

z = z + (d0 + 13)

---

[
    alt z: (((((d3 + 11) + (z * 26)) - (d2 + 5)) / 26) - (d1 + 10)) / 26
]

[
    z = (((((d3 + 11) + ((((d5 + ((((((((d9 + 6) - (d8 + 1) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26)) / 26) - (d7 + 11)) / 26) - (d6 + 4)) / 26) * 26)) - (d4 + 5)) / 26) * 26)) - (d2 + 5)) / 26) - (d1 + 10)) / 26
]

w = d1

z = z * 26

z = z + (d1 + 10)

---

[
    alt z: (((d3 + 11) + (z * 26)) - (d2 + 5)) / 26
]

[
    z = (((d3 + 11) + ((((d5 + ((((((((d9 + 6) - (d8 + 1) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26)) / 26) - (d7 + 11)) / 26) - (d6 + 4)) / 26) * 26)) - (d4 + 5)) / 26) * 26)) - (d2 + 5)) / 26
]

w = d2

z = z * 26

z = z + (d2 + 5)

---

[
    alt z: (d3 + 11) + (z * 26)
]

[
    z = (d3 + 11) + ((((d5 + ((((((((d9 + 6) - (d8 + 1) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26)) / 26) - (d7 + 11)) / 26) - (d6 + 4)) / 26) * 26)) - (d4 + 5)) / 26) * 26)
]

w = d3

x = z % 26

z = z / 26

x = x - 11

x = 1 if x !== d3

z = z * ((25 * x) + 1)

z = z + ((d3 + 14) * x)

---

[
    alt z: ((d5 + (z * 26)) - (d4 + 5)) / 26
]

[
    z = ((d5 + ((((((((d9 + 6) - (d8 + 1) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26)) / 26) - (d7 + 11)) / 26) - (d6 + 4)) / 26) * 26)) - (d4 + 5)) / 26
]

w = d4

z = z * 26

z = z + (d4 + 5)

---

[
    alt z: d5 + (z * 26)
]

[
    z = d5 + ((((((((d9 + 6) - (d8 + 1) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26)) / 26) - (d7 + 11)) / 26) - (d6 + 4)) / 26) * 26)
]

w = d5

x = z % 26

z = z / 26

x = x

x = 1 if x !== d5

z = z * ((25 * x) + 1)

z = z + ((d5 + 15) * x)

---

[
    alt z: (((((z - (d8 + 1)) / 26) - (d7 + 11)) / 26) - (d6 + 4)) / 26
]

[
    z = ((((((d9 + 6) - (d8 + 1) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26)) / 26) - (d7 + 11)) / 26) - (d6 + 4)) / 26
]

w = d6

z = z * 26

z = z + (d6 + 4)

---

[
    alt z: (((z - (d8 + 1)) / 26) - (d7 + 11)) / 26
]

[
    z = ((((d9 + 6) - (d8 + 1) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26)) / 26) - (d7 + 11)) / 26
]

w = d7

z = z * 26

z = z + (d7 + 11)

---

[
    alt z: (z - (d8 + 1)) / 26
]

[
    z = ((d9 + 6) - (d8 + 1) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26)) / 26
]

w = d8

z = z * 26

z = z + (d8 + 1)

---

[
    z = (d9 + 6) + (((d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)) * 26)
]

w = d9

x = z % 26

z = z / 26

x = x - 6

x = 1 if x !== w

z = z * ((25 * x) + 1)

z = z + ((d9 + 15) * x)

---

[
    z = (d10 + 10) + (((d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)) * 26)
]

w = d10

x = z % 26

z = z / 26

x = x - 10

x = 1 if x !== w

z = z * ((25 * x) + 1)

z = z + ((d10 + 12) * x)

---

[
    z = (d11 + 12) + (((d12 + 3) + ((d13 + 5) * 26)) * 26)
]

w = d11

x = z % 26

z = z / 26

x = x - 12

x = 1 if x !== d11

z = z * ((25 * x) + 1)

z = z + ((d11 + 8) * x)

---

[
    z = (d12 + 3) + ((d13 + 5) * 26)
]

w = d12

x = z % 26

z = z / 26

x = x - 3

x = 1 if x !== d12

z = z * ((25 * x) + 1)

z = z + ((d12 + 14) * x)

---

[
    z = d13 + 5
]

w = d13 (last digit)

x = z % 26

z = z / 26

x = x - 5

x = 1 if x !== d13

z = z * ((25 * x) + 1)

Answer = z + ((d13 + 9) * x)






// end
